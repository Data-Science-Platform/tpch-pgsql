language: python

python:
  - "3.4"

services:
  - postgresql

addons:
  postgresql: "9.6"

env:
  - TPCH_PASSWORD=dbf8pXCrzZ5cDeqv

before_install:
  - python --version
  - pip --version
  - pg_config --version
  - psql --version

  - wget -q https://github.com/electrum/tpch-dbgen/archive/32f1c1b92d1664dba542e927d23d86ffa57aa253.zip -O tpch-dbgen.zip
  - unzip -q tpch-dbgen.zip
  - mv tpch-dbgen-32f1c1b92d1664dba542e927d23d86ffa57aa253 tpch-dbgen
  - rm tpch-dbgen.zip

install:
  - pip install -r requirements.txt

before_script:
  - psql --command="CREATE DATABASE tpchdb;" -U postgres
  - psql --command="CREATE USER tpch WITH PASSWORD '${TPCH_PASSWORD}';" -U postgres
  - psql --command="GRANT ALL PRIVILEGES ON DATABASE tpchdb TO tpch;" -U postgres

script:
  - ./benchmark.py || export EXIT_CODE=$? && echo $EXIT_CODE && if [ "$EXIT_CODE" == "2" ]; then true; else false; fi

  - ./benchmark.py --help

  - export PYTHONPATH=$(pwd) && echo $PYTHONPATH && cd test/ && python -m unittest test_benchmark.py --verbose && cd ..

  - ./benchmark.py --scale 0.01 prepare
  - if [ ! -d data/ ]; then false; fi
  - if [ ! -d data/delete/ ]; then false; fi
  - if [ ! -d data/load/ ]; then false; fi
  - if [ ! -d data/update/ ]; then false; fi
  - |
    ret=0; \
    for d in load delete update; do if [ ! -d data/${d}/ ]; then ret=$(expr $ret + 1); fi; done; \
    if [ $ret -eq 0 ]; then true; else false; fi
  - |
    ret=0; \
    for f in customer lineitem nation orders part partsupp region supplier; \
    do if [ ! -f data/load/${f}.tbl.csv ]; then echo data/load/${f}.tbl.csv; ret=$(expr $ret + 1); fi; done; \
    if [ $ret -eq 0 ]; then true; else false; fi
  - |
    ret=0; \
    for i in 1 2; do if [ ! -f data/delete/delete.${i}.csv ]; \
    then echo data/delete/delete.${i}.csv; ret=$(expr $ret + 1); fi; done; \
    if [ $ret -eq 0 ]; then true; else false; fi
  - |
    ret=0; \
    for table in lineitem orders; do \
    for i in 1 2; do if [ ! -f data/update/${table}.tbl.u${i}.csv ]; \
    then echo data/update/${table}.tbl.u${i}.csv; ret=$(expr $ret + 1); fi; done; done; \
    if [ $ret -eq 0 ]; then true; else false; fi
  - if [ ! -d query_root/ ]; then false; fi
  - if [ ! -d query_root/perf_query_gen/ ]; then false; fi
  - |
    ret=0; \
    for i in $(seq 1 22); do if [ ! -f query_root/perf_query_gen/${i}.sql ]; then ret=$(expr $ret + 1); fi; done; \
    if [ $ret -eq 0 ]; then true; else false; fi

  - ./benchmark.py --dbname tpchdb --username tpch --password $TPCH_PASSWORD load

  - ./benchmark.py --dbname tpchdb --username tpch --password $TPCH_PASSWORD query

